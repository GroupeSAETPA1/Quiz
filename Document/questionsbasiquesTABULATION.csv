"Commentaire"	1	"Quel est le délimiteur de début d'un commentaire Javadoc ?"	"le délimiteur /**"	"le délimiteur /*"	"le délimiteur //"	"le délimiteur (*"		
"Commentaire"	1	"Laquelle des propositions suivantes n'est pas un commentaire dans la syntaxe du langage Java ?"	"<*  commentaire *>"	" /* commentaire */"	" // commentaire"			
"Commentaire"	1	"Si un commentaire est écrit sur plusieurs lignes, quel délimiteur de commentaire est-il préférable d'utiliser ?"	" /* commentaire */"	" // commentaire"		" "		
"Commentaire"	2	"Il est conseillé d'écrire un commentaire au tout début du programme (avant la ligne comportant l'instruction package). Ce 1er commentaire est-il un commentaire Javadoc ?"	"non"	"oui"				
"Commentaire"	3	"Oé le premier commentaire Javadoc est-il écrit ?"	"juste avant la ligne ""public class ?"""	"avant la ligne ""package ..."""	"entre les lignes ""package ..."" et ""import ..."""	"juste aprés la ligne ""public class ?"""		
"Commentaire"	2	"A quoi correspond l'expression : @author Dupont ?"	"une balise reconnue par Javadoc"	"un texte sans signification particuliére"	"une faéon de présenter le code choisie par le programmeur nommé Dupont"			"Les balises Javadoc commencent par le  caractére @"
"Commentaire"	2	"Qu'est-ce que Javadoc ?"	"un outil logiciel qui génére automatiquement de la documentation é partir des commentaires présents dans du code Java"	"un plugin é installer obligatoirement lorsque l'on installe Java sur son ordinateur"	"le nom de la variable systéme contenant le chemin vers la documentation Java"			
"Commentaire"	1	"Dans un commentaire Javadoc, il faut écrire le nom de l'auteur du programme aprés laquelle des balises suivantes ?"	" @author"	" @auteur"	" @param"	" @version"		
"Commentaire"	2	"Quelle balise trouve-t-on dans le commentaire Javadoc situé juste avant la ligne ""public static void main ?"" ?"	" @param"	" @version"	" @author"	" @return"		"Aprés cette balise, on expliquer le réle du paramétre de la fonction main"
"Commentaire"	2	"Le commentaire que l'on écrit juste avant la ligne ""public static void main ?"" est-il un commentaire Javadoc ?"	"oui"	"non"				"oui, car il commence par /**"
"Commentaire"	2	"Que doit décrire le texte écrit dans le commentaire Javadoc situé juste avant la ligne ""public class ?"" ?"	"Le réle du programme, en explicitant de maniére précise ce réle "	"Un résumé trés bref, pas plus d'une ligne, du réle du programme "	"Il n'y a pas de commentaire Javadoc juste avant la ligne ""public class ?"""	"Le nom du fichier contenant le programme"	"Un texte libre laissé é l'appréciation du programmeur"	
"Commentaire"	2	"Pendant le cycle de vie d'un programme, é quel moment les commentaires sont-ils importants ?"	"pendant l'écriture du programme et pendant la phase de maintenance du logiciel"	"pendant l'écriture du programme"	"pendant la phase de maintenance du logiciel"	"les commentaires ne sont pas importants"		
"Affichage"	1	"Les 2 lignes de codes suivantes sont équivalentes :   System.out.println(""Bonjour""); et System.out.print(""Bonjour\n"");    "	" vrai"	" faux"				"Le caractére \n est un caractére spécial qui améne le curseur au début de la ligne suivante"
"Affichage"	2	"Supposons que la varible nommée entier contienne la valeur 12. Qu'affiche l'instruction suivante :  System.out.println(""Entier = "" + entier + entier);"	"Entier = 1212"	"Entier = 24"	"Entier = 12"	"Entier = + 12 + 12"		"Le caractére + situé entre les apparitions de la variable entier est considéré comme un + de concaténation, et pas d'addition"
"Affichage"	2	"Qu'affiche l'instruction suivante : System.out.println(""Bonjour "" + "" a tous"");"	"Bonjour a tous"	"cette instruction est incorrecte"	"Bonjour                                 a tous"			"Le retour é la ligne est fait aprés l'affichage de la totalité du texte"
"Variable"	2	"Comment se nomme la ligne de code suivante :             int entier; "	"une déclaration de variable"	"une initialisation de variable"	"cette ligne n'a pas d'appellation particuliére"	"une affectation de variable"		"Sur cette ligne, on précise le type de la variable et son nom"
"Variable"	3	"Quelle est la différence entre une affectation et une initialisation de variable ?"	"l'initialisation est la premiére affectation de la variable"	"il n'y a pas de différence entre les 2 termes"	"on n'emploie jamais le terme initialisation de variable"	"initialisation est un synonyme de déclaration"		
"Variable"	1	"Dans la ligne de code suivante que représente int ?      int entier;"	"int est le type de la variable entier"	"cette ligne est incorrecte, il faut écrire integer é la place de int"	"int est un mot-clé que l'on utilise dans toutes les déclarations de variables"			"int est l'abréviation de integer"
"Affectation"	1	"On suppose que la variable entier est de type entier. Quelle sera sa valeur aprés les affectations suivantes ?  entier = 5;                                                                 entier = entier + 2;"	7	5	6	2	10	
"Affectation"	1	"On suppose que la variable entier est de type entier. Quelle sera sa valeur aprés les affectations suivantes ?  entier = 5;                                                                 entier = entier + entier;"	10	5	7	15	0	
"Type"	1	"On suppose que le type de la variable entier est int. Quelles valeurs pourra-t-on affecter é entier ?"	"des entiers négatifs ou positifs, y compris 0"	"seulement des entiers positifs y compris 0"	"seulement des entiers strictement positifs"	"seulement des entiers strictement négatifs"	"seulement des entiers négatifs et aussi 0"	
"Type"	1	"On suppose que le type de la variable entier est int. Peut-on affecter é cette variable la valeur 2,5 ?"	"non"	"oui"				
"Saisie"	1	"On souhaite que effectuer une saisie au clavier d'un nombre entier et stocker celui-ci dans une variable nommée entier. Que faut-il écrire ?"	"entier = entree.nextInt();"	"entier = nexInt();"	"entier = entree.nextInt;"	"entier = entree.nextint();"	"entier = entree.Nextint;"	
"if"	2	"Dans une instruction if, la branche else est facultative ? Ou autrement dit, on peut écrire :    if ( condition ) {     instructions    }"	"oui"	"non"				
"if "	1	"Dans une instruction if, les paranthéses autour de la condition sont obligatoires :                                           if ( condition ) { "	"oui"	"non"				
"condition"	2	"La condition suivante    age < 0  && age > 115   est "	"toujours fausse"	"toujours vraie"	"vraie ou fausse selon la valeur de la variable age"			
"condition"	1	"La condition suivante 100 <= quantite <= 200   est correctement écrite"	" faux"	" vrai"				
"condition"	1	"La condition suivante   100 =< quantite est correctement écrite"	" faux"	" vrai"				
"condition"	1	"Comment écrit-on la condition qui dit que la quantite doit étre différente de 0 ?"	"quantite != 0"	"quantite <> 0"	"quantite /= 0"			
"condition"	2	"Quelle condition exprime qu'une note doit étre comprise entre 0 et 20 et étre différente de 9 ?"	"note >= 0 && note <= 20 && note != 9"	"note > 0 && note < 20 && note != 9"	"note >= 0 || note <= 20 || note != 9"	"note > 0 || note < 20 || note != 9"	"note >= 0 && note < 9 && note >= 10 && note <= 20"	
"condition"	1	"Quelle condition exprime que la variable entier contient un nombre pair ?"	"entier % 2 == 0"	"entier % 2 = 0"	"entier / 2 == 0"	"entier / 2 = 0"		
